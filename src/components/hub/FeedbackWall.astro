---
const { heading = "", intro = "", placeholder = "Escribe tu feedback...", nameLabel = "Nombre", postLabel = "Publicar", storageKey = "mvpFeedback" } = Astro.props as any;
---

<section class="py-10 md:py-12 bg-white">
  <div class="container mx-auto max-w-7xl px-4">
    {heading && <h2 class="text-2xl sm:text-3xl font-extrabold tracking-tight">{heading}</h2>}
    {intro && <p class="mt-2 text-sm text-neutral-600">{intro}</p>}

    <div class="mt-6 rounded-2xl border p-4 sm:p-5">
      <form id="fbForm" class="grid gap-3 md:grid-cols-[1fr_auto] md:items-start">
        <div class="grid gap-2">
          <input id="fbName" class="w-full rounded-lg border px-3 py-2 text-sm" placeholder={nameLabel} />
          <textarea id="fbText" class="w-full rounded-lg border px-3 py-2 text-sm" rows="3" placeholder={placeholder}></textarea>
        </div>
        <button id="fbPost" type="submit" class="btn btn-primary self-start mt-2 md:mt-0">{postLabel}</button>
      </form>

      <ul id="fbList" class="mt-6 space-y-3"></ul>
      <p id="fbEmpty" class="mt-3 text-xs text-neutral-500 hidden">Aún no hay feedback. ¡Sé el primero!</p>
    </div>
  </div>

  <script is:inline>
    (() => {
      const root = document.currentScript && document.currentScript.closest('section');
      const KEY = root?.getAttribute('data-storage') || 'mvpFeedback';
      const form = root?.querySelector('#fbForm');
      const name = root?.querySelector('#fbName');
      const text = root?.querySelector('#fbText');
      const list = root?.querySelector('#fbList');
      const empty = root?.querySelector('#fbEmpty');

      const read = () => {
        try { return JSON.parse(localStorage.getItem(KEY) || '[]'); } catch { return []; }
      };
      const write = (arr) => localStorage.setItem(KEY, JSON.stringify(arr));
      const render = () => {
        if (!list || !empty) return;
        const data = read().sort((a,b) => b.ts - a.ts);
        list.innerHTML = '';
        if (!data.length) { empty.classList.remove('hidden'); return; }
        empty.classList.add('hidden');
        data.forEach(item => {
          const li = document.createElement('li');
          li.className = 'rounded-xl border p-4';
          const when = new Date(item.ts).toLocaleString('es-AR', { dateStyle:'medium', timeStyle:'short' });
          li.innerHTML = `
            <div class="text-xs text-neutral-500">${when}${item.name ? ' · ' + item.name : ''}</div>
            <div class="mt-1 text-sm text-neutral-800">${(item.text || '').replace(/</g,'&lt;').replace(/>/g,'&gt;')}</div>
          `;
          list.appendChild(li);
        });
      };

      render();

      form?.addEventListener('submit', (e) => {
        e.preventDefault();
        const val = (text && 'value' in text) ? text.value.trim() : '';
        if (!val) return;
        const who = (name && 'value' in name) ? name.value.trim() : '';
        const data = read();
        data.push({ name: who, text: val, ts: Date.now() });
        write(data);
        if (text && 'value' in text) text.value = '';
        render();
      });
    })();
  </script>
</section>
