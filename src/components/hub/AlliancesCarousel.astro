---
type Item = { src: string; alt?: string; href?: string };
const { title = "", items = [] } = Astro.props as { title?: string; items: Item[] };
---

<section class="py-10">
  <div class="container mx-auto max-w-7xl px-4">
    {title && <h2 class="text-2xl sm:text-3xl font-extrabold tracking-tight">{title}</h2>}

    <div class="relative mt-6 overflow-hidden rounded-2xl  bg-white">
      <!-- Fades -->
      <div class="pointer-events-none absolute left-0 top-0 h-full w-16 bg-gradient-to-r from-white to-transparent"></div>
      <div class="pointer-events-none absolute right-0 top-0 h-full w-16 bg-gradient-to-l from-white to-transparent"></div>

      <div class="flex w-max animate-marquee items-center gap-10 p-6 motion-reduce:animate-none">
        {[...items, ...items].map((it, i) => {
          const img = <img src={it.src} alt={it.alt ?? ""} loading="lazy" class="h-10 sm:h-12 md:h-14 w-auto object-contain" />;
          return (
            <div class="shrink-0" aria-hidden={i >= items.length ? "true" : "false"}>
              {it.href ? <a href={it.href} target="_blank" rel="noopener noreferrer" class="block opacity-90 hover:opacity-100 transition">{img}</a> : img}
            </div>
          );
        })}
      </div>
    </div>
  </div>
</section>
