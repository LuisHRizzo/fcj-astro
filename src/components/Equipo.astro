---
import { getTrans } from "../i18n/utils";

// Tipos
type Links = {
  linkedin?: string;
  x?: string;
  site?: string;
};
type Member = {
  name: string;
  role: string;
  bio?: string;
  photo?: string;
  links?: Links;
};

type Props = {
  lang?: string;
  dict: any;
  sectionId?: string;
  overlineKey?: string; // "Equipo"
  titleKey?: string;    // "Nuestro equipo"
  leadKey?: string;     // "Conoce a las personas..."
  team?: Member[];
  // Callout final
  calloutTitleKey?: string;
  calloutLeadKey?: string;
  ctaHref?: string;
  ctaKey?: string;
};

// Datos por defecto si no pasás team
import defaultTeam from "../data/team.json" assert { type: "json" };

const {
  lang = "es",
  dict,
  sectionId = "equipo",
  overlineKey = "about.team.overline",
  titleKey = "about.team.title",
  leadKey = "about.team.lead",
  team = defaultTeam as Member[],
  calloutTitleKey = "about.team.callout.title",
  calloutLeadKey  = "about.team.callout.lead",
  ctaHref = `/${lang}/contacto/`,
  ctaKey = "about.team.callout.cta",
} = Astro.props as Props;

const t = (k: string, fb?: string) => getTrans(dict, k, fb);

// Helpers
const has = (s?: string) => !!(s && s.trim());
const initials = (name: string) =>
  name.split(/\s+/).filter(Boolean).slice(0,2).map(n => n[0]?.toUpperCase() ?? "").join("");
---

<section id={sectionId} class="py-12 md:py-16">
  <div class="container mx-auto max-w-7xl px-4">
    <p class="text-sm font-semibold text-neutral-500">
      {t(overlineKey, "Equipo")}
    </p>

    <h2 class="mt-2 text-4xl sm:text-5xl font-extrabold tracking-tight">
      {t(titleKey, "Nuestro equipo")}
    </h2>

    <p class="mt-3 max-w-2xl text-neutral-600">
      {t(leadKey, "Conoce a las personas que impulsan nuestra misión.")}
    </p>

    <!-- GRID -->
<div
  class="mt-10 grid gap-10 md:grid-cols-2 md:gap-x-12 md:gap-y-12
         md:[&>*:last-child:nth-child(odd)]:col-span-2
         md:[&>*:last-child:nth-child(odd)]:justify-self-center
         md:[&>*:last-child:nth-child(odd)]:max-w-2xl"
>
  {team.map((m: Member) => (
    <article class="card overflow-hidden">
      <div class="grid gap-0 md:grid-cols-[160px_1fr]">
        <!-- Foto (izquierda en md+, arriba en mobile) -->
        <div class="aspect-[4/3] md:aspect-[1/1] w-full h-full">
          {has(m.photo) ? (
            <img
              src={m.photo}
              alt={m.name}
              loading="lazy"
              class="h-full w-full object-cover"
              onerror="this.style.display='none'"
            />
          ) : (
            <div class="h-full w-full bg-neutral-200 flex items-center justify-center">
              <span class="text-3xl md:text-4xl font-bold text-neutral-500 select-none">
                {initials(m.name)}
              </span>
            </div>
          )}
        </div>

        <!-- Texto -->
        <div class="p-6 md:p-8">
          <h3 class="text-xl md:text-2xl font-bold leading-tight">{m.name}</h3>
          <p class="mt-1 text-sm text-neutral-700">{m.role}</p>
          {has(m.bio) && <p class="mt-3 text-sm text-neutral-600">{m.bio}</p>}

          {m.links && (has(m.links.linkedin) || has(m.links.x) || has(m.links.site)) && (
            <div class="mt-5 flex items-center gap-3">
              {has(m.links.linkedin) && (
                <a href={m.links.linkedin!} target="_blank" rel="noopener noreferrer" aria-label="LinkedIn"
                   class="inline-flex h-9 w-9 items-center justify-center rounded-full border hover:bg-neutral-50">
                  <svg viewBox="0 0 24 24" class="h-4 w-4" fill="currentColor" aria-hidden="true">
                    <path d="M4 3a2 2 0 1 0 0 4 2 2 0 0 0 0-4zM3 8h3.8v13H3zM14.5 8A5.5 5.5 0 0 1 20 13.5V21h-3.8v-6.1c0-1.7-.9-2.7-2.4-2.7s-2.5 1-2.5 2.7V21H7.6V8h3.6v1.8C12 9 13 8 14.5 8z"/>
                  </svg>
                </a>
              )}
              {has(m.links.x) && (
                <a href={m.links.x!} target="_blank" rel="noopener noreferrer" aria-label="X (Twitter)"
                   class="inline-flex h-9 w-9 items-center justify-center rounded-full border hover:bg-neutral-50">
                  <svg viewBox="0 0 24 24" class="h-4 w-4" fill="currentColor" aria-hidden="true">
                    <path d="M3 3h4.3l4.2 6 4.7-6H21l-7.3 9.2L21 21h-4.3l-4.6-6.4L7 21H3l7.6-9.7z"/>
                  </svg>
                </a>
              )}
              {has(m.links.site) && (
                <a href={m.links.site!} target="_blank" rel="noopener noreferrer" aria-label="Sitio web"
                   class="inline-flex h-9 w-9 items-center justify-center rounded-full border hover:bg-neutral-50">
                  <svg viewBox="0 0 24 24" class="h-4 w-4" fill="currentColor" aria-hidden="true">
                    <path d="M12 2a10 10 0 1 0 0 20 10 10 0 0 0 0-20zm6.9 9h-3.1a15.6 15.6 0 0 0-1.2-5A8 8 0 0 1 18.9 11zM12 4c.9 0 2.4 2.1 3 5H9c.6-2.9 2.1-5 3-5zM8.4 6a15.6 15.6 0 0 0-1.2 5H4.1A8 8 0 0 1 8.4 6zM4.1 13h3.1a15.6 15.6 0 0 0 1.2 5 8 8 0 0 1-4.3-5zm4.9 0h6c-.6 2.9-2.1 5-3 5s-2.4-2.1-3-5zm6.6 5c.5-1 1-2.2 1.2-3.5l.1-1.5h3.1a8 8 0 0 1-4.4 5z"/>
                  </svg>
                </a>
              )}
            </div>
          )}
        </div>
      </div>
    </article>
  ))}
</div>



    <!-- Callout final -->
    <div class="mt-12 rounded-3xl border p-6 sm:p-8">
      <h3 class="text-2xl sm:text-3xl font-extrabold tracking-tight">
        {t(calloutTitleKey, "Buscamos innovadores imparables")}
      </h3>
      <p class="mt-2 text-neutral-600">
        {t(calloutLeadKey, "Únete a nuestro equipo y marca la diferencia.")}
      </p>
      <div class="mt-4">
        <a href={ctaHref} class="inline-flex items-center rounded-full border px-4 py-2 text-sm font-medium hover:bg-neutral-50">
          {t(ctaKey, "Cuéntanos sobre ti")}
        </a>
      </div>
    </div>
  </div>
</section>
