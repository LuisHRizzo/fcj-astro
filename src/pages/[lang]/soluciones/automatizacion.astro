---
import BaseLayout from "../../../layouts/BaseLayout.astro";
import { loadDict, getTrans } from "../../../i18n/utils";
import { getStaticLocalePaths } from "../../../i18n/paths";
import CTASection from "../../../components/solutions/CTASection.astro";
import ResourcesList from "../../../components/solutions/ResourcesList.astro";

export const getStaticPaths = getStaticLocalePaths;

const { lang = "es" } = Astro.params;
const dict = await loadDict(lang);
const t = (k: string, fb?: string) => getTrans(dict, k, fb);

// helper para arrays/objetos desde dict
function pick(path: string, fallback: any) {
  const segs = path.split('.');
  let cur = dict;
  for (const s of segs) cur = cur?.[s];
  return (cur ?? fallback);
}

// datos
const segTabs   = pick("solutions.secureTennet.segments.tabs", []);
const segItems  = pick("solutions.secureTennet.segments.items", []);
const problems  = pick("solutions.secureTennet.problems.items", []);
const features  = pick("solutions.secureTennet.features.items", []);
const tableCols = pick("solutions.secureTennet.segmentsTable.cols", []);
const tableRows = pick("solutions.secureTennet.segmentsTable.rows", []);
const diffs     = pick("solutions.secureTennet.diff.items", []);
---
<BaseLayout lang={lang} dict={dict}>
  <!-- HERO -->
  <section class="relative isolate overflow-hidden bg-neutral-900 text-white">
    <div class="container mx-auto max-w-7xl px-4 py-16 sm:py-20 lg:py-24">
      <p class="text-sm font-semibold text-white/80">
        {t("solutions.secureTennet.hero.overline")}
      </p>
      <h1 class="mt-3 text-4xl sm:text-5xl lg:text-6xl font-extrabold tracking-tight">
        {t("solutions.secureTennet.hero.title")}
      </h1>
      <p class="mt-5 max-w-3xl text-lg text-white/85">
        {t("solutions.secureTennet.hero.subtitle")}
      </p>
    </div>
    <div class="h-px w-full bg-neutral-300/30"></div>
  </section>

  <!-- SEGMENTACIÓN (mensajes + CTAs por público) -->
  <section class="py-8 bg-white">
    <div class="container mx-auto max-w-7xl px-4">
      <!-- Tabs -->
      <div class="flex flex-wrap gap-2">
        {segTabs.map((label: string, i: any) => (
          <button
            class={`rounded-full border px-4 py-2 text-sm ${i === 0 ? 'bg-neutral-900 text-white' : 'bg-white text-neutral-800 hover:bg-neutral-50'}`}
            data-seg-btn
            data-index={i}
          >{label}</button>
        ))}
      </div>

      <!-- Panel mensajes + CTAs -->
      <div class="mt-6 rounded-3xl border p-6 sm:p-8">
        {segItems.map((s: any, i: number) => (
          <div class={i === 0 ? "" : "hidden"} data-seg-panel data-index={i}>
            <p class="text-sm font-semibold text-neutral-800">{s.tagline1}</p>
            <p class="mt-1 text-sm text-neutral-700">{s.tagline2}</p>
            <div class="mt-4 flex flex-wrap gap-3">
              <a href={`/${lang}/contacto/`} class="btn btn-primary" data-seg-primary>{s.primary}</a>
              <a href={`/${lang}/contacto/`} class="btn btn-outline" data-seg-secondary>{s.secondary}</a>
            </div>
          </div>
        ))}
      </div>
    </div>

    <script is:inline>
      (() => {
        const root = document.currentScript && document.currentScript.closest('section');
        if (!root) return;
        const btns = Array.from(root.querySelectorAll('[data-seg-btn]'));
        const panels = Array.from(root.querySelectorAll('[data-seg-panel]'));
        btns.forEach((b) => {
          b.addEventListener('click', () => {
            const idx = b.getAttribute('data-index');
            // botones
            btns.forEach((x) => x.classList.remove('bg-neutral-900','text-white'));
            btns.forEach((x) => x.classList.add('bg-white','text-neutral-800'));
            b.classList.add('bg-neutral-900','text-white');
            b.classList.remove('bg-white','text-neutral-800');
            // panels
            panels.forEach((p) => p.classList.add('hidden'));
            const active = root.querySelector('[data-seg-panel][data-index="'+idx+'"]');
            if (active) active.classList.remove('hidden');
          });
        });
      })();
    </script>
  </section>

  <!-- MENSAJE CLAVE -->
  <section class="py-10 md:py-12 bg-white">
    <div class="container mx-auto max-w-7xl px-4">
      <h2 class="text-2xl sm:text-3xl font-extrabold tracking-tight">
        {t("solutions.secureTennet.key.title")}
      </h2>
      <div class="mt-4 max-w-3xl space-y-4 text-neutral-700">
        <p>{t("solutions.secureTennet.key.p1")}</p>
        <p>{t("solutions.secureTennet.key.p2")}</p>
      </div>
    </div>
  </section>

  <!-- PROBLEMAS -->
  <section class="py-6 bg-white">
    <div class="container mx-auto max-w-7xl px-4">
      <h3 class="text-xl font-extrabold tracking-tight">{t("solutions.secureTennet.problems.heading")}</h3>
      <ul class="mt-3 grid gap-3 sm:grid-cols-2 lg:grid-cols-3">
        {problems.map((p: any) => (
          <li class="rounded-xl border p-4 text-sm text-neutral-700">{p}</li>
        ))}
      </ul>
    </div>
  </section>

  <!-- FUNCIONALIDADES -->
  <section class="py-10 md:py-12 bg-white">
    <div class="container mx-auto max-w-7xl px-4">
      <h3 class="text-xl sm:text-2xl font-extrabold tracking-tight">
        {t("solutions.secureTennet.features.heading")}
      </h3>
      <div class="mt-6 grid gap-6 sm:grid-cols-2 lg:grid-cols-3">
        {features.map((f: any) => (
          <article class="card p-6">
            <div class="flex items-start gap-4">
              <div class="icon-box">
                <!-- iconos simples inlined -->
                {f.icon === "radar"  && <svg viewBox="0 0 24 24" class="h-5 w-5" fill="none" stroke="currentColor" stroke-width="2"><circle cx="12" cy="12" r="9"/><path d="M12 12l6-6M12 3v3M21 12h-3M12 21v-3M3 12h3"/></svg>}
                {f.icon === "check"  && <svg viewBox="0 0 24 24" class="h-5 w-5" fill="none" stroke="currentColor" stroke-width="2"><path d="M20 6 9 17l-5-5"/></svg>}
                {f.icon === "bolt"   && <svg viewBox="0 0 24 24" class="h-5 w-5" fill="currentColor"><path d="M13 2 3 14h7l-1 8 10-12h-7z"/></svg>}
                {f.icon === "hand"   && <svg viewBox="0 0 24 24" class="h-5 w-5" fill="none" stroke="currentColor" stroke-width="2"><path d="M8 13V6a2 2 0 1 1 4 0v6"/><path d="M12 12V6a2 2 0 1 1 4 0v6"/><path d="M16 12V7a2 2 0 1 1 4 0v7a5 5 0 0 1-5 5H9a5 5 0 0 1-5-5v-2"/></svg>}
                {f.icon === "shield" && <svg viewBox="0 0 24 24" class="h-5 w-5" fill="currentColor"><path d="M12 2 4 5v6c0 5 3.4 9.4 8 11 4.6-1.6 8-6 8-11V5l-8-3z"/></svg>}
                {f.icon === "lab"    && <svg viewBox="0 0 24 24" class="h-5 w-5" fill="none" stroke="currentColor" stroke-width="2"><path d="M9 3v6l-5 9h16l-5-9V3"/><path d="M7 13h10"/></svg>}
              </div>
              <div>
                <h4 class="text-lg font-bold leading-tight">{f.title}</h4>
                <p class="mt-1 text-sm text-neutral-600">{f.desc}</p>
              </div>
            </div>
          </article>
        ))}
      </div>
    </div>
  </section>

  <!-- TABLA POR SEGMENTO -->
  <section class="py-10 md:py-12 bg-white">
    <div class="container mx-auto max-w-7xl px-4">
      <h3 class="text-xl sm:text-2xl font-extrabold tracking-tight">
        {t("solutions.secureTennet.segmentsTable.heading")}
      </h3>
      <div class="mt-4 overflow-x-auto rounded-2xl border">
        <table class="min-w-full text-sm">
          <thead class="bg-neutral-50 text-neutral-700">
            <tr>
              {tableCols.map((c: any) => (<th class="px-4 py-3 text-left font-semibold">{c}</th>))}
            </tr>
          </thead>
          <tbody class="divide-y">
            {tableRows.map((r: any) => (
              <tr class="hover:bg-neutral-50">
                {r.map((cell: any) => (<td class="px-4 py-3 align-top">{cell}</td>))}
              </tr>
            ))}
          </tbody>
        </table>
      </div>
    </div>
  </section>

  <!-- DIFERENCIAL -->
  <section class="py-10 md:py-12 bg-white">
    <div class="container mx-auto max-w-7xl px-4">
      <h3 class="text-xl sm:text-2xl font-extrabold tracking-tight">
        {t("solutions.secureTennet.diff.heading")}
      </h3>
      <ul class="mt-4 grid gap-3 sm:grid-cols-2 lg:grid-cols-3">
        {diffs.map((d: any) => (<li class="rounded-xl border p-4 text-sm text-neutral-700">{d}</li>))}
      </ul>
    </div>
  </section>

  <!-- RECURSOS -->
  <ResourcesList
    {lang} {dict}
    items={[
      { title: t("solutions.secureTennet.resources.checklist"),  href:`/${lang}/recursos/checklist-gdpr-soc2.pdf` },
      { title: t("solutions.secureTennet.resources.whitepaper"), href:`/${lang}/recursos/whitepaper-governance.pdf` },
      { title: t("solutions.secureTennet.resources.demo"),       href:`/${lang}/recursos/secure-tennet-demo.mp4` }
    ]}
  />

  <!-- FORM -->
  <section class="py-12 md:py-16">
    <div class="container mx-auto max-w-7xl px-4">
      <div class="rounded-3xl border p-6 sm:p-8">
        <h3 class="text-2xl font-extrabold tracking-tight">{t("solutions.secureTennet.form.title")}</h3>
        <p class="mt-2 text-neutral-600">{t("solutions.secureTennet.form.lead")}</p>

        <form class="mt-6 grid gap-4 md:grid-cols-2" data-secure-form data-mailto="info@cienciayjusticia.org" novalidate>
          <div>
            <label class="text-sm font-medium">{t("solutions.secureTennet.form.name")}</label>
            <input name="name" required class="mt-1 w-full rounded-lg border px-3 py-2 text-sm" />
          </div>
          <div>
            <label class="text-sm font-medium">{t("solutions.secureTennet.form.email")}</label>
            <input type="email" name="email" required class="mt-1 w-full rounded-lg border px-3 py-2 text-sm" />
          </div>
          <div>
            <label class="text-sm font-medium">{t("solutions.secureTennet.form.org")}</label>
            <input name="org" class="mt-1 w-full rounded-lg border px-3 py-2 text-sm" />
          </div>
          <div>
            <label class="text-sm font-medium">{t("solutions.secureTennet.form.type")}</label>
            <input name="type" class="mt-1 w-full rounded-lg border px-3 py-2 text-sm" placeholder="GDPR / SOC2 / ENS / AI Act / Otro" />
          </div>

          <div class="md:col-span-2">
            <button type="submit" data-submit class="btn btn-primary">{t("solutions.secureTennet.form.submit")}</button>
            <p class="mt-2 text-xs text-neutral-500" data-msg aria-live="polite"></p>
          </div>

          <input type="text" name="company" tabindex="-1" autocomplete="off" class="hidden" />
        </form>
      </div>
    </div>

    <script is:inline>
      (() => {
        const root = document.currentScript && document.currentScript.closest('section');
        const form = root && root.querySelector('[data-secure-form]');
        if (!form) return;
        const mailto = form.getAttribute('data-mailto') || 'info@cienciayjusticia.org';
        const btn = form.querySelector('[data-submit]');
        const msg = form.querySelector('[data-msg]');
        const hp = form.querySelector('input[name="company"]');

        const setLoading = (v) => {
          if (btn instanceof HTMLButtonElement) {
            btn.disabled = v;
            btn.setAttribute('aria-busy', String(v));
          }
        };
        const showMsg = (text, ok) => {
          if (msg instanceof HTMLElement) {
            msg.textContent = text;
            msg.className = "mt-2 text-xs " + (ok ? "text-green-700" : "text-red-700");
          }
        };

        form.addEventListener('submit', (e) => {
          e.preventDefault();
          if (hp instanceof HTMLInputElement && hp.value) return;
          if (!(form instanceof HTMLFormElement)) return;
          const data = Object.fromEntries(new FormData(form).entries());
          const subject = "Secure Tennet — Diagnóstico/Demo";
          const plain =
            `Nombre: ${data.name || ''}\n` +
            `Email: ${data.email || ''}\n` +
            `Organización: ${data.org || ''}\n` +
            `Tipo: ${data.type || ''}`;

          const body = encodeURIComponent(plain);
          window.location.href = `mailto:${mailto}?subject=${encodeURIComponent(subject)}&body=${body}`;
        });
      })();
    </script>
  </section>

  <!-- CTA FINAL -->
  <CTASection
    primaryLabel={t("solutions.secureTennet.ctas.primary")}
    primaryHref={`/${lang}/contacto/`}
    secondaryLabel={t("solutions.secureTennet.ctas.secondary")}
    secondaryHref={`/${lang}/recursos/checklist-gdpr-soc2.pdf`}
  />
</BaseLayout>

