---
import BaseLayout from "../../../layouts/BaseLayout.astro";
import { loadDict, getTrans } from "../../../i18n/utils";
import { getStaticLocalePaths } from "../../../i18n/paths";
import CTASection from "../../../components/solutions/CTASection.astro";
import ResourcesList from "../../../components/solutions/ResourcesList.astro";

export const getStaticPaths = getStaticLocalePaths;

const { lang = "es" } = Astro.params;
const dict = await loadDict(lang);
const t = (k: string, fb?: string) => getTrans(dict, k, fb);

// safe getter
const get = (path: string, fb: any) => path.split('.').reduce((acc, k) => (acc && acc[k] != null ? acc[k] : null), dict) ?? fb;

const problems  = get("solutions.observability.problems.items", []);
const features  = get("solutions.observability.features.items", []);
const tableCols = get("solutions.observability.segmentsTable.cols", []);
const tableRows = get("solutions.observability.segmentsTable.rows", []);
const diffs     = get("solutions.observability.diff.items", []);

const heroImg = "/assets/observabilidad-hero.png"; 
---

<BaseLayout lang={lang} dict={dict}>
  <!-- HERO -->
  <section class="relative isolate overflow-hidden bg-neutral-900 text-white">
    <div class="container mx-auto max-w-7xl px-4 py-14 sm:py-18 lg:py-20">
      <p class="text-sm font-semibold text-white/80">{t("solutions.observability.hero.overline")}</p>
      <div class="grid gap-8 md:grid-cols-2 md:items-center">
        <div>
          <h1 class="mt-3 text-4xl sm:text-5xl lg:text-6xl font-extrabold tracking-tight">
            {t("solutions.observability.hero.title")}
          </h1>
          <p class="mt-5 max-w-2xl text-lg text-white/85">
            {t("solutions.observability.hero.subtitle")}
          </p>
          <div class="mt-6 flex flex-wrap gap-3">
            <a href={`/${lang}/contacto/`} class="btn btn-primary">
              {t("solutions.observability.ctas.primary")}
            </a>
            <a href={`/${lang}/recursos/observabilidad-ficha.pdf`} class="btn btn-outline">
              {t("solutions.observability.ctas.secondary")}
            </a>
          </div>
        </div>
        <div class="rounded-2xl border bg-neutral-800/40 overflow-hidden">
          <img src={heroImg} alt={t("solutions.observability.hero.imgAlt")} class="h-full w-full object-cover" loading="lazy" />
        </div>
      </div>
    </div>
    <div class="h-px w-full bg-white/15"></div>
  </section>

  <!-- MENSAJE CLAVE -->
  <section class="py-10 md:py-12 bg-white">
    <div class="container mx-auto max-w-7xl px-4">
      <h2 class="text-2xl sm:text-3xl font-extrabold tracking-tight">
        {t("solutions.observability.key.title")}
      </h2>
      <div class="mt-4 max-w-3xl space-y-4 text-neutral-700">
        <p>{t("solutions.observability.key.p1")}</p>
        <p>{t("solutions.observability.key.p2")}</p>
      </div>
    </div>
  </section>

  <!-- PROBLEMA CENTRAL -->
  <section class="py-6 bg-white">
    <div class="container mx-auto max-w-7xl px-4">
      <h3 class="text-xl font-extrabold tracking-tight">{t("solutions.observability.problems.heading")}</h3>
      <ul class="mt-3 grid gap-3 sm:grid-cols-2 lg:grid-cols-3">
        {problems.map((p: any) => (
          <li class="rounded-xl border p-4 text-sm text-neutral-700">{p}</li>
        ))}
      </ul>
    </div>
  </section>

  <!-- SOLUCIÓN / FUNCIONALIDADES -->
  <section class="py-10 md:py-12 bg-white">
    <div class="container mx-auto max-w-7xl px-4">
      <h3 class="text-xl sm:text-2xl font-extrabold tracking-tight">
        {t("solutions.observability.features.heading")}
      </h3>
      <div class="mt-6 grid gap-6 sm:grid-cols-2 lg:grid-cols-3">
        {features.map((f: any) => (
          <article class="card p-6">
            <div class="flex items-start gap-4">
              <div class="icon-box">
                {f.icon === "ingest"       && <svg viewBox="0 0 24 24" class="h-5 w-5" fill="none" stroke="currentColor" stroke-width="2"><path d="M3 7h18M3 12h12M3 17h8"/></svg>}
                {f.icon === "dashboards"   && <svg viewBox="0 0 24 24" class="h-5 w-5" fill="none" stroke="currentColor" stroke-width="2"><rect x="3" y="3" width="7" height="7"/><rect x="14" y="3" width="7" height="7"/><rect x="3" y="14" width="7" height="7"/><rect x="14" y="14" width="7" height="7"/></svg>}
                {f.icon === "cloud"        && <svg viewBox="0 0 24 24" class="h-5 w-5" fill="currentColor"><path d="M7 18h10a4 4 0 0 0 0-8 6 6 0 0 0-11.3-2A4.5 4.5 0 0 0 7 18z"/></svg>}
                {f.icon === "integrations" && <svg viewBox="0 0 24 24" class="h-5 w-5" fill="none" stroke="currentColor" stroke-width="2"><path d="M9 7h6M4 12h16M9 17h6"/><circle cx="7" cy="7" r="2"/><circle cx="17" cy="17" r="2"/></svg>}
                {f.icon === "automation"   && <svg viewBox="0 0 24 24" class="h-5 w-5" fill="none" stroke="currentColor" stroke-width="2"><path d="M12 6v6l4 2"/><circle cx="12" cy="12" r="9"/></svg>}
              </div>
              <div>
                <h4 class="text-lg font-bold leading-tight">{f.title}</h4>
                <p class="mt-1 text-sm text-neutral-600">{f.desc}</p>
              </div>
            </div>
          </article>
        ))}
      </div>
    </div>
  </section>

  <!-- TABLA POR PÚBLICO -->
  <section class="py-10 md:py-12 bg-white">
    <div class="container mx-auto max-w-7xl px-4">
      <h3 class="text-xl sm:text-2xl font-extrabold tracking-tight">
        {t("solutions.observability.segmentsTable.heading")}
      </h3>
      <div class="mt-4 overflow-x-auto rounded-2xl border">
        <table class="min-w-full text-sm">
          <thead class="bg-neutral-50 text-neutral-700">
            <tr>
              {tableCols.map((c: any) => (<th class="px-4 py-3 text-left font-semibold">{c}</th>))}
            </tr>
          </thead>
          <tbody class="divide-y">
            {tableRows.map((r: any) => (
              <tr class="hover:bg-neutral-50">
                {r.map((cell: any) => (<td class="px-4 py-3 align-top">{cell}</td>))}
              </tr>
            ))}
          </tbody>
        </table>
      </div>
    </div>
  </section>

  <!-- DIFERENCIAL -->
  <section class="py-10 md:py-12 bg-white">
    <div class="container mx-auto max-w-7xl px-4">
      <h3 class="text-xl sm:text-2xl font-extrabold tracking-tight">
        {t("solutions.observability.diff.heading")}
      </h3>
      <ul class="mt-4 grid gap-3 sm:grid-cols-2 lg:grid-cols-3">
        {diffs.map((d: any) => (<li class="rounded-xl border p-4 text-sm text-neutral-700">{d}</li>))}
      </ul>
    </div>
  </section>

  <!-- RECURSOS -->
  <ResourcesList
    {lang} {dict}
    items={[
      { title: t("solutions.observability.resources.datasheet"), href:`/${lang}/recursos/observabilidad-ficha.pdf` },
      { title: t("solutions.observability.resources.whitepaper"), href:`/${lang}/recursos/observabilidad-whitepaper.pdf` },
      { title: t("solutions.observability.resources.case"), href:`/${lang}/recursos/observabilidad-caso.pdf` }
    ]}
  />

  <!-- (Opcional) Mini form con mailto -->
  <section class="py-12 md:py-16">
    <div class="container mx-auto max-w-7xl px-4">
      <div class="rounded-3xl border p-6 sm:p-8">
        <h3 class="text-2xl font-extrabold tracking-tight">{t("solutions.observability.form.title")}</h3>
        <p class="mt-2 text-neutral-600">{t("solutions.observability.form.lead")}</p>

        <form class="mt-6 grid gap-4 md:grid-cols-2" data-obs-form data-mailto="info@cienciayjusticia.org" novalidate>
          <div>
            <label class="text-sm font-medium">{t("solutions.observability.form.name")}</label>
            <input name="name" required class="mt-1 w-full rounded-lg border px-3 py-2 text-sm" />
          </div>
          <div>
            <label class="text-sm font-medium">{t("solutions.observability.form.email")}</label>
            <input type="email" name="email" required class="mt-1 w-full rounded-lg border px-3 py-2 text-sm" />
          </div>
          <div class="md:col-span-2">
            <label class="text-sm font-medium">{t("solutions.observability.form.org")}</label>
            <input name="org" class="mt-1 w-full rounded-lg border px-3 py-2 text-sm" />
          </div>

          <div class="md:col-span-2">
            <button type="submit" data-submit class="btn btn-primary">{t("solutions.observability.form.submit")}</button>
            <p class="mt-2 text-xs text-neutral-500" data-msg aria-live="polite"></p>
          </div>

          <!-- honeypot -->
          <input type="text" name="company" tabindex="-1" autocomplete="off" class="hidden" />
        </form>
      </div>
    </div>

    <script is:inline>
      (() => {
        const section = document.currentScript && document.currentScript.closest('section');
        const form = section && section.querySelector('[data-obs-form]');
        if (!form) return;
        const mailto = form.getAttribute('data-mailto') || 'info@cienciayjusticia.org';
        const hp = form.querySelector('input[name="company"]');

        form.addEventListener('submit', (e) => {
          e.preventDefault();
          if (hp && hp.value) return; // bot
          const data = Object.fromEntries(new FormData(form).entries());
          const subject = "Observabilidad — Demo/Info";
          const plain =
            `Nombre: ${data.name || ''}\n` +
            `Email: ${data.email || ''}\n` +
            `Organización: ${data.org || ''}`;
          const body = encodeURIComponent(plain);
          window.location.href = `mailto:${mailto}?subject=${encodeURIComponent(subject)}&body=${body}`;
        });
      })();
    </script>
  </section>

  <!-- CTA FINAL -->
  <CTASection
    primaryLabel={t("solutions.observability.ctas.primary")}
    primaryHref={`/${lang}/contacto/`}
    secondaryLabel={t("solutions.observability.ctas.secondary")}
    secondaryHref={`/${lang}/recursos/observabilidad-ficha.pdf`}
  />
</BaseLayout>